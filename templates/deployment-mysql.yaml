kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "ctfd.name" . }}-mysql
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/part-of: {{ include "ctfd.name" . }}
    app.kubernetes.io/component: mysql
    app.kubernetes.io/name: {{ include "ctfd.name" . }}-mysql
    helm.sh/chart: {{ include "ctfd.chart" . }}
    app.kubernetes.io/instance: {{ include "ctfd.name" . }}-mysql
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      name: {{ include "ctfd.name" . }}-mysql
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: {{ include "ctfd.name" . }}-mysql
    spec:
      volumes:
        - name: {{ include "ctfd.name" . }}-mysql-data
          persistentVolumeClaim:
            claimName: {{ include "ctfd.name" . }}-mysql
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: mysql
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "ctfd.name" . }}-mysql
                  key: database-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ctfd.name" . }}-mysql
                  key: database-password
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ctfd.name" . }}-mysql
                  key: database-root-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "ctfd.name" . }}-mysql
                  key: database-name
          ports:
            - containerPort: 3306
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: {{ include "ctfd.name" . }}-mysql-data
              mountPath: /var/lib/mysql/data
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/mysql
      restartPolicy: Always
      dnsPolicy: ClusterFirst

